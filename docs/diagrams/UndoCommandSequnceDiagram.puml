@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant "undoCommand\n:Command" as undoCommand LOGIC_COLOR
participant "clearCommand\n:Command" as clearCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
participant "undoStack\n:Stack<Command>" as undoStack MODEL_COLOR
participant "redoStack\n:Stack<Command>" as redoStack MODEL_COLOR
end box

[-> LogicManager : execute("undo")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("undo")
activate AddressBookParser

create undoCommand
AddressBookParser -> undoCommand
activate undoCommand

undoCommand --> AddressBookParser
deactivate undoCommand

AddressBookParser --> LogicManager
deactivate AddressBookParser

LogicManager -> undoCommand : execute(m)
activate undoCommand

undoCommand -> Model : popLastMutableCommand()
activate Model

Model -> undoStack : pop()
activate undoStack

undoStack --> Model
deactivate undoStack

Model --> undoCommand : command
deactivate Model

undoCommand -> clearCommand : isMutable()
activate clearCommand

clearCommand --> undoCommand : true
deactivate clearCommand

opt command is mutable
    undoCommand -> clearCommand : undo(m)
    activate clearCommand

    clearCommand --> undoCommand : MESSAGE_UNDO_SUCCESS
    deactivate clearCommand

    undoCommand -> Model : pushUndoCommandHistory(command)
    activate Model

    Model -> redoStack : push(command)
    activate redoStack

    redoStack --> Model
    deactivate redoStack

    Model --> undoCommand
    deactivate Model

    create CommandResult
    undoCommand -> CommandResult
    activate CommandResult

    CommandResult --> undoCommand
    deactivate CommandResult

end

undoCommand --> LogicManager
deactivate undoCommand
destroy undoCommand


[<--LogicManager
deactivate LogicManager
@enduml
